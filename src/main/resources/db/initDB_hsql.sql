DROP TABLE users IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE menus IF EXISTS;
DROP TABLE prices IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX users_unique_name_idx ON USERS (name);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)
);

CREATE TABLE restaurants
(
  id                INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurants_name  VARCHAR(255)
);
CREATE UNIQUE INDEX restaurants_unique_name_idx ON RESTAURANTS (restaurants_name);

CREATE TABLE menus
(
  id              INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurants_id  INTEGER NOT NULL,
  date            DATE DEFAULT now() NOT NULL,
  CONSTRAINT menus_idx UNIQUE (restaurants_id, date),
  FOREIGN KEY (restaurants_id) REFERENCES RESTAURANTS (id)
);

CREATE TABLE prices
(

);

CREATE TABLE vouts
(
  user_id         INTEGER NOT NULL,
  restaurants_id  INTEGER NOT NULL,
  vote_date       DATE DEFAULT now() NOT NULL,
  CONSTRAINT vouts_idx UNIQUE (user_id, restaurants_id, vote_date),
  FOREIGN KEY (user_id) REFERENCES USERS (id),
  FOREIGN KEY (restaurants_id) REFERENCES RESTAURANTS (id)
);